!<arch>
0-isupper.c/    0           0     0     644     210       `
#include "main.h"

/**
 *
 * _isupper - checks for uppercase character
 * @c: the character to be checked
 * Return: 1 if c is uppercase, 0 otherwise
 */
int _isupper(int c)
{
	return (c >= 'A' && c <= 'Z');
}
0-memset.c/     0           0     0     644     297       `
#include "main.h"

/**
 *
 * _memset - ironnou
 * @s: pointer to char params
 * @b: data to change
 * @n: bytes of the memory area pointed to by s
 * Return: *s
 */

char *_memset(char *s, char b, unsigned int n)
{
	unsigned int i;

	for (i = 0; i < n; i++)
	{
		s[i] = b;								}
	return (s);
}

0-strcat.c/     0           0     0     644     178       `
#include "main.h"

/**
 * *_strcat - concatenates two strings
 * @dest: pointer destination
 * @src: pointer source
 * Return: void
 */

char *_strcat(char *dest, char *src)
{
}
100-atoi.c/     0           0     0     644     436       `
#include "main.h"

/**
 * _atoi - convert a string to an integer.
 * @s: char type string
 * Return: integer converted
 */

int _atoi(char *s)
{
	int i;
	int res = 0;
	int sig = -1;
	int brk = 0;

	for (i = 0; s[i] != '\0'; i++)
	{
		if (s[i] == '-')
			sig = sig * -1;
		if (s[i] >= '0' && s[i] <= '9')
		{
			res = res * 10;
			res -= (s[i] - '0');
			brk = 1;
		}
		else if (brk == 1)
			break;
	}
	res = sig * res;
	return (res);
}
1-isdigit.c/    0           0     0     644     270       `
#include "main.h"

/**
 * _isdigit - checks if the parameter is a number between 0 and 9.
 * @c: input number.
 * Return: 1 if is a number (0 - 9), 0 in other case.
 */
int _isdigit(int c)
{
	if (c >= 48 && c <= 57)
	{
		return (1);
	}
	else
	{
		return (0);								}
}
1-memcpy.c/     0           0     0     644     210       `
#include "main.h"



/**
 *
 * _memcpy - irontnoux2
 * @dest: pointer to char params
 * @src: pointer to char params
 * @n: size
 * Return: *dest
 */

char *_memcpy(char *dest, char *src, unsigned int n)

{

}
1-strncat.c/    0           0     0     644     226       `
#include "main.h"

/**
 *
 * *_strncat - concatenates n bytes of two strings
 * @dest: pointer destination
 * @src: pointer source
 * @n: number of bytes
 * Return: void
 */

char *_strncat(char *dest, char *src, int n)

{

}
2-strchr.c/     0           0     0     644     160       `
#include "main.h"

/**
 *
 * _strchr - prints found c
 * @s: pointer to char
 * @c: char params to found
 * Return: *S
 */
char *_strchr(char *s, char c)

{

}
2-strlen.c/     0           0     0     644     198       `
#include "main.h"

/**
 *
 * _strlen - find the length of a string
 * @s: pointer to the string to check
 * Return: void
 */

int _strlen(char *s)
{
	int i = 0;

	while (s[i])
		i++;
	return (i);
}
2-strncpy.c/    0           0     0     644     347       `
#include <stdio.h>
#include "main.h"

/**
 * _strncpy - find the length of a string
 * @dest: pointer to the string
 * @src: pointer
 * @n: int
 * Return: destination
 */
char *_strncpy(char *dest, char *src, int n)
{
	int i;

	for (i = 0; i < n && src[i] != '\0'; i++)
		dest[i] = src[i];
	for ( ; i < n; i++)
		dest[i] = '\0';
	return (dest);
}

3-islower.c/    0           0     0     644     179       `
#include "main.h"

/**
 * _islower - check for lower case letter
 * @c : character to check the case
 * Return:0 or 1
 */

int _islower(int c)

{
	return (c >= 97 && c <= 122);
}

3-puts.c/       0           0     0     644     167       `
#include "main.h"

/**
 *
 * _puts - prints a string, followed by a new line,
 * @str: pointer to the string to print
 * Return: void
 */

void _puts(char *str)

{

}

3-strcmp.c/     0           0     0     644     209       `
#include "main.h"

/**
 * _strcmp - compares two strings
 * @s1: first string.
 * @s2: second string.
 * Return: 0 if s1 and s2 are equals,
 * another number if not.
 */

int _strcmp(char *s1, char *s2)

{

}

3-strspn.c/     0           0     0     644     248       `
#include "main.h"

/**
 *
 * _strspn - Gets the length of a prefix substring.
 * @s: String where substring will look.
 * @accept: Substring of accepted chars.
 * Return: Length of occurrence.
 */

unsigned int _strspn(char *s, char *accept)

{

}
4-isalpha.c/    0           0     0     644     196       `
#include "main.h"

/**
 * _isalpha - check for lower case letter
 * @c : character to check
 * Return:0 or 1
 */

int _isalpha(int c)

{
	return ((c >= 97 && c <= 122) || (c >= 65 && c <= 90));
}
4-strpbrk.c/    0           0     0     644     181       `
#include "main.h"

#include <stdio.h>



/**
 * _strpbrk - bytes
 * @s: pointer to char
 * @accept: pointer to char
 * Return: NULL
 */

char *_strpbrk(char *s, char *accept)

{

}

5-strstr.c/     0           0     0     644     181       `
#include "main.h"

/**
 *
 * _strstr - function locate
 * @haystack: pointer to char
 * @needle: pointer to char
 * Return: 0
 */

char *_strstr(char *haystack, char *needle)

{

}

6-abs.c/        0           0     0     644     151       `
#include "main.h"

/**
 *
 * _abs - return abs value
 * @n : number to check
 * Return:0 or 1
 */

int _abs(int n)

{
	return (n >= 0 ? n : n * -1);
}

9-strcpy.c/     0           0     0     644     304       `
#include "main.h"

/**
 *
 * _strcpy -  copies the string pointed to by src
 * @dest: char type string
 * @src: char type string
 * Description: Copy the string pointed to by pointer `src` to
 * the buffer pointed to by `dest`
 * Return: Pointer to `dest`
 */

char *_strcpy(char *dest, char *src)

{

}
_putchar.c/     0           0     0     644     246       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */

int _putchar(char c)

{
	return (write(1, &c, 1));
}
